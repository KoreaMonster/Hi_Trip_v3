
"""schedules 앱의 일정 생성 API를 50개 이상의 현실 사례로 검증한다."""

from datetime import datetime
from decimal import Decimal

import pytest
from rest_framework.test import APIClient

from schedules.models import Schedule


SCHEDULE_CREATION_SCENARIOS = [
    {
        "day_number": 2,
        "start_time": "09:15:00",
        "end_time": "12:00:00",
        "order": 2,
        "transport": "도보",
        "main_content": "시장 탐방",
        "meeting_point": "집결지-1",
        "budget": "10.50",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 1",
    },
    {
        "day_number": 3,
        "start_time": "10:30:00",
        "end_time": "12:15:00",
        "order": 3,
        "transport": "택시",
        "main_content": "박물관 관람",
        "meeting_point": "집결지-2",
        "budget": "11.00",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 2",
    },
    {
        "day_number": 4,
        "start_time": "11:45:00",
        "end_time": "13:45:00",
        "order": 4,
        "transport": "지하철",
        "main_content": "테마파크",
        "meeting_point": "집결지-3",
        "budget": "11.50",
        "use_place": False,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 3",
    },
    {
        "day_number": 1,
        "start_time": "08:15:00",
        "end_time": "10:00:00",
        "order": 5,
        "transport": "전세버스",
        "main_content": "전통 공방",
        "meeting_point": "집결지-4",
        "budget": "12.00",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 4",
    },
    {
        "day_number": 2,
        "start_time": "09:30:00",
        "end_time": "11:45:00",
        "order": 1,
        "transport": "버스",
        "main_content": "시청 투어",
        "meeting_point": "집결지-5",
        "budget": "12.50",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 5",
    },
    {
        "day_number": 3,
        "start_time": "10:45:00",
        "end_time": "13:15:00",
        "order": 2,
        "transport": "도보",
        "main_content": "시장 탐방",
        "meeting_point": "집결지-6",
        "budget": "13.00",
        "use_place": False,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 6",
    },
    {
        "day_number": 4,
        "start_time": "12:00:00",
        "end_time": "14:45:00",
        "order": 3,
        "transport": "택시",
        "main_content": "박물관 관람",
        "meeting_point": "집결지-7",
        "budget": "13.50",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 7",
    },
    {
        "day_number": 1,
        "start_time": "08:30:00",
        "end_time": "11:00:00",
        "order": 4,
        "transport": "지하철",
        "main_content": "테마파크",
        "meeting_point": "집결지-8",
        "budget": "14.00",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 8",
    },
    {
        "day_number": 2,
        "start_time": "09:45:00",
        "end_time": "12:30:00",
        "order": 5,
        "transport": "전세버스",
        "main_content": "전통 공방",
        "meeting_point": "집결지-9",
        "budget": "14.50",
        "use_place": False,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 9",
    },
    {
        "day_number": 3,
        "start_time": "11:00:00",
        "end_time": "13:15:00",
        "order": 1,
        "transport": "버스",
        "main_content": "시청 투어",
        "meeting_point": "집결지-10",
        "budget": "15.00",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 10",
    },
    {
        "day_number": 4,
        "start_time": "12:15:00",
        "end_time": "14:45:00",
        "order": 2,
        "transport": "도보",
        "main_content": "시장 탐방",
        "meeting_point": "집결지-11",
        "budget": "15.50",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 11",
    },
    {
        "day_number": 1,
        "start_time": "08:45:00",
        "end_time": "11:30:00",
        "order": 3,
        "transport": "택시",
        "main_content": "박물관 관람",
        "meeting_point": "집결지-12",
        "budget": "16.00",
        "use_place": False,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 12",
    },
    {
        "day_number": 2,
        "start_time": "09:00:00",
        "end_time": "11:45:00",
        "order": 4,
        "transport": "지하철",
        "main_content": "테마파크",
        "meeting_point": "집결지-13",
        "budget": "16.50",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 13",
    },
    {
        "day_number": 3,
        "start_time": "10:15:00",
        "end_time": "12:45:00",
        "order": 5,
        "transport": "전세버스",
        "main_content": "전통 공방",
        "meeting_point": "집결지-14",
        "budget": "17.00",
        "use_place": False,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 14",
    },
    {
        "day_number": 4,
        "start_time": "11:30:00",
        "end_time": "13:45:00",
        "order": 1,
        "transport": "버스",
        "main_content": "시청 투어",
        "meeting_point": "집결지-15",
        "budget": "17.50",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 15",
    },
    {
        "day_number": 1,
        "start_time": "08:00:00",
        "end_time": "10:15:00",
        "order": 2,
        "transport": "도보",
        "main_content": "시장 탐방",
        "meeting_point": "집결지-16",
        "budget": "18.00",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 16",
    },
    {
        "day_number": 2,
        "start_time": "09:15:00",
        "end_time": "11:45:00",
        "order": 3,
        "transport": "택시",
        "main_content": "박물관 관람",
        "meeting_point": "집결지-17",
        "budget": "18.50",
        "use_place": False,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 17",
    },
    {
        "day_number": 3,
        "start_time": "10:30:00",
        "end_time": "13:15:00",
        "order": 4,
        "transport": "지하철",
        "main_content": "테마파크",
        "meeting_point": "집결지-18",
        "budget": "19.00",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 18",
    },
    {
        "day_number": 4,
        "start_time": "11:45:00",
        "end_time": "14:15:00",
        "order": 5,
        "transport": "전세버스",
        "main_content": "전통 공방",
        "meeting_point": "집결지-19",
        "budget": "19.50",
        "use_place": False,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 19",
    },
    {
        "day_number": 1,
        "start_time": "08:15:00",
        "end_time": "10:45:00",
        "order": 1,
        "transport": "버스",
        "main_content": "시청 투어",
        "meeting_point": "집결지-20",
        "budget": "20.00",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 20",
    },
    {
        "day_number": 2,
        "start_time": "09:30:00",
        "end_time": "12:00:00",
        "order": 2,
        "transport": "도보",
        "main_content": "시장 탐방",
        "meeting_point": "집결지-21",
        "budget": "20.50",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 21",
    },
    {
        "day_number": 3,
        "start_time": "10:45:00",
        "end_time": "13:30:00",
        "order": 3,
        "transport": "택시",
        "main_content": "박물관 관람",
        "meeting_point": "집결지-22",
        "budget": "21.00",
        "use_place": False,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 22",
    },
    {
        "day_number": 4,
        "start_time": "12:00:00",
        "end_time": "14:30:00",
        "order": 4,
        "transport": "지하철",
        "main_content": "테마파크",
        "meeting_point": "집결지-23",
        "budget": "21.50",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 23",
    },
    {
        "day_number": 1,
        "start_time": "08:30:00",
        "end_time": "11:15:00",
        "order": 5,
        "transport": "전세버스",
        "main_content": "전통 공방",
        "meeting_point": "집결지-24",
        "budget": "22.00",
        "use_place": False,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 24",
    },
    {
        "day_number": 2,
        "start_time": "09:45:00",
        "end_time": "12:30:00",
        "order": 1,
        "transport": "버스",
        "main_content": "시청 투어",
        "meeting_point": "집결지-25",
        "budget": "22.50",
        "use_place": True,
        "expected_status": 201,
        "issue": "정상 일정 생성 시나리오 25",
    },
    {
        "day_number": 1,
        "start_time": "11:30:00",
        "end_time": "10:45:00",
        "order": 2,
        "transport": "도보",
        "main_content": "시간 역전 점검",
        "meeting_point": "시간오류-26",
        "budget": "15.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "종료 시간이 시작 시간보다 빠른 요청",
        "expected_error_field": "end_time",
        "expected_error_message": "종료 시간은 시작 시간보다 늦어야 합니다.",
    },
    {
        "day_number": 1,
        "start_time": "11:30:00",
        "end_time": "10:45:00",
        "order": 3,
        "transport": "도보",
        "main_content": "시간 역전 점검",
        "meeting_point": "시간오류-27",
        "budget": "15.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "종료 시간이 시작 시간보다 빠른 요청",
        "expected_error_field": "end_time",
        "expected_error_message": "종료 시간은 시작 시간보다 늦어야 합니다.",
    },
    {
        "day_number": 1,
        "start_time": "11:30:00",
        "end_time": "10:45:00",
        "order": 4,
        "transport": "도보",
        "main_content": "시간 역전 점검",
        "meeting_point": "시간오류-28",
        "budget": "15.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "종료 시간이 시작 시간보다 빠른 요청",
        "expected_error_field": "end_time",
        "expected_error_message": "종료 시간은 시작 시간보다 늦어야 합니다.",
    },
    {
        "day_number": 1,
        "start_time": "11:30:00",
        "end_time": "10:45:00",
        "order": 5,
        "transport": "도보",
        "main_content": "시간 역전 점검",
        "meeting_point": "시간오류-29",
        "budget": "15.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "종료 시간이 시작 시간보다 빠른 요청",
        "expected_error_field": "end_time",
        "expected_error_message": "종료 시간은 시작 시간보다 늦어야 합니다.",
    },
    {
        "day_number": 1,
        "start_time": "11:30:00",
        "end_time": "10:45:00",
        "order": 1,
        "transport": "도보",
        "main_content": "시간 역전 점검",
        "meeting_point": "시간오류-30",
        "budget": "15.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "종료 시간이 시작 시간보다 빠른 요청",
        "expected_error_field": "end_time",
        "expected_error_message": "종료 시간은 시작 시간보다 늦어야 합니다.",
    },
    {
        "day_number": 0,
        "start_time": "09:00:00",
        "end_time": "10:30:00",
        "order": 2,
        "transport": "버스",
        "main_content": "잘못된 일차",
        "meeting_point": "일차오류-36",
        "budget": "18.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "일차가 1 미만인 요청",
        "expected_error_field": "day_number",
        "expected_error_message": "일차는 1 이상이어야 합니다.",
    },
    {
        "day_number": -1,
        "start_time": "09:00:00",
        "end_time": "10:30:00",
        "order": 3,
        "transport": "버스",
        "main_content": "잘못된 일차",
        "meeting_point": "일차오류-37",
        "budget": "18.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "일차가 1 미만인 요청",
        "expected_error_field": "day_number",
        "expected_error_message": "일차는 1 이상이어야 합니다.",
    },
    {
        "day_number": 0,
        "start_time": "09:00:00",
        "end_time": "10:30:00",
        "order": 4,
        "transport": "버스",
        "main_content": "잘못된 일차",
        "meeting_point": "일차오류-38",
        "budget": "18.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "일차가 1 미만인 요청",
        "expected_error_field": "day_number",
        "expected_error_message": "일차는 1 이상이어야 합니다.",
    },
    {
        "day_number": -1,
        "start_time": "09:00:00",
        "end_time": "10:30:00",
        "order": 5,
        "transport": "버스",
        "main_content": "잘못된 일차",
        "meeting_point": "일차오류-39",
        "budget": "18.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "일차가 1 미만인 요청",
        "expected_error_field": "day_number",
        "expected_error_message": "일차는 1 이상이어야 합니다.",
    },
    {
        "day_number": 0,
        "start_time": "09:00:00",
        "end_time": "10:30:00",
        "order": 1,
        "transport": "버스",
        "main_content": "잘못된 일차",
        "meeting_point": "일차오류-40",
        "budget": "18.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "일차가 1 미만인 요청",
        "expected_error_field": "day_number",
        "expected_error_message": "일차는 1 이상이어야 합니다.",
    },
    {
        "day_number": 2,
        "start_time": "13:00:00",
        "end_time": "14:30:00",
        "order": 3,
        "transport": "지하철",
        "main_content": "중복 순서 확인",
        "meeting_point": "중복-41",
        "budget": "12.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "동일 일차·순서 중복 요청",
        "expected_error_field": "non_field_errors",
        "expected_error_message": "3번째 순서는 이미 존재",
        "preexisting": "duplicate_order",
    },
    {
        "day_number": 2,
        "start_time": "13:00:00",
        "end_time": "14:30:00",
        "order": 3,
        "transport": "지하철",
        "main_content": "중복 순서 확인",
        "meeting_point": "중복-42",
        "budget": "12.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "동일 일차·순서 중복 요청",
        "expected_error_field": "non_field_errors",
        "expected_error_message": "3번째 순서는 이미 존재",
        "preexisting": "duplicate_order",
    },
    {
        "day_number": 2,
        "start_time": "13:00:00",
        "end_time": "14:30:00",
        "order": 3,
        "transport": "지하철",
        "main_content": "중복 순서 확인",
        "meeting_point": "중복-43",
        "budget": "12.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "동일 일차·순서 중복 요청",
        "expected_error_field": "non_field_errors",
        "expected_error_message": "3번째 순서는 이미 존재",
        "preexisting": "duplicate_order",
    },
    {
        "day_number": 2,
        "start_time": "13:00:00",
        "end_time": "14:30:00",
        "order": 3,
        "transport": "지하철",
        "main_content": "중복 순서 확인",
        "meeting_point": "중복-44",
        "budget": "12.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "동일 일차·순서 중복 요청",
        "expected_error_field": "non_field_errors",
        "expected_error_message": "3번째 순서는 이미 존재",
        "preexisting": "duplicate_order",
    },
    {
        "day_number": 2,
        "start_time": "13:00:00",
        "end_time": "14:30:00",
        "order": 3,
        "transport": "지하철",
        "main_content": "중복 순서 확인",
        "meeting_point": "중복-45",
        "budget": "12.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "동일 일차·순서 중복 요청",
        "expected_error_field": "non_field_errors",
        "expected_error_message": "3번째 순서는 이미 존재",
        "preexisting": "duplicate_order",
    },
    {
        "day_number": 3,
        "start_time": "15:00:00",
        "end_time": "16:15:00",
        "order": 2,
        "transport": "버스",
        "main_content": "음수 예산 점검",
        "meeting_point": "예산오류-46",
        "budget": "-5.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "예산이 음수인 요청",
        "expected_error_field": "budget",
        "expected_error_message": "예산은 0 이상이어야 합니다.",
    },
    {
        "day_number": 3,
        "start_time": "15:00:00",
        "end_time": "16:15:00",
        "order": 3,
        "transport": "버스",
        "main_content": "음수 예산 점검",
        "meeting_point": "예산오류-47",
        "budget": "-5.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "예산이 음수인 요청",
        "expected_error_field": "budget",
        "expected_error_message": "예산은 0 이상이어야 합니다.",
    },
    {
        "day_number": 3,
        "start_time": "15:00:00",
        "end_time": "16:15:00",
        "order": 4,
        "transport": "버스",
        "main_content": "음수 예산 점검",
        "meeting_point": "예산오류-48",
        "budget": "-5.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "예산이 음수인 요청",
        "expected_error_field": "budget",
        "expected_error_message": "예산은 0 이상이어야 합니다.",
    },
    {
        "day_number": 3,
        "start_time": "15:00:00",
        "end_time": "16:15:00",
        "order": 5,
        "transport": "버스",
        "main_content": "음수 예산 점검",
        "meeting_point": "예산오류-49",
        "budget": "-5.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "예산이 음수인 요청",
        "expected_error_field": "budget",
        "expected_error_message": "예산은 0 이상이어야 합니다.",
    },
    {
        "day_number": 3,
        "start_time": "15:00:00",
        "end_time": "16:15:00",
        "order": 1,
        "transport": "버스",
        "main_content": "음수 예산 점검",
        "meeting_point": "예산오류-50",
        "budget": "-5.00",
        "use_place": True,
        "expected_status": 400,
        "issue": "예산이 음수인 요청",
        "expected_error_field": "budget",
        "expected_error_message": "예산은 0 이상이어야 합니다.",
    },
    {
        "day_number": 2,
        "start_time": "17:00:00",
        "end_time": "19:15:00",
        "order": 6,
        "transport": "도보",
        "main_content": "야간 골목 투어",
        "meeting_point": "야간-51",
        "budget": "20.00",
        "use_place": True,
        "expected_status": 201,
        "issue": "해질녘 투어 정상 등록",
    },
    {
        "day_number": 3,
        "start_time": "07:30:00",
        "end_time": "08:45:00",
        "order": 6,
        "transport": "버스",
        "main_content": "이른 조식 이동",
        "meeting_point": "조식-52",
        "budget": "0.00",
        "use_place": False,
        "expected_status": 201,
        "issue": "조기 출발 이동 일정 등록",
    },
    {
        "day_number": 4,
        "start_time": "18:00:00",
        "end_time": "20:30:00",
        "order": 6,
        "transport": "전세버스",
        "main_content": "야경 투어",
        "meeting_point": "야경-53",
        "budget": "55.75",
        "use_place": True,
        "expected_status": 201,
        "issue": "야경 투어 고비용 일정 등록",
    },
    {
        "day_number": 1,
        "start_time": "06:30:00",
        "end_time": "07:45:00",
        "order": 6,
        "transport": "도보",
        "main_content": "호텔 조깅 세션",
        "meeting_point": "조깅-54",
        "budget": 5,
        "use_place": False,
        "expected_status": 201,
        "issue": "건강 프로그램 일정 등록",
    },
    {
        "day_number": 2,
        "start_time": "21:00:00",
        "end_time": "22:00:00",
        "order": 7,
        "transport": "택시",
        "main_content": "비상 약국 방문",
        "meeting_point": "비상-55",
        "budget": "12.25",
        "use_place": True,
        "expected_status": 201,
        "issue": "긴급 상황 대응 일정 등록",
    },
]


def _calculate_duration_minutes(start: str, end: str) -> int:
    start_dt = datetime.strptime(start, "%H:%M:%S")
    end_dt = datetime.strptime(end, "%H:%M:%S")
    return int((end_dt - start_dt).total_seconds() // 60)


def _display_text(minutes: int) -> str:
    if minutes <= 0:
        return "정보 없음"
    hours = minutes // 60
    remain = minutes % 60
    if hours and remain:
        return f"{hours}시간 {remain}분"
    if hours:
        return f"{hours}시간"
    if remain:
        return f"{remain}분"
    return "정보 없음"


@pytest.mark.parametrize("scenario", SCHEDULE_CREATION_SCENARIOS)
@pytest.mark.django_db
def test_schedule_creation_across_real_world_variations(manager_user, trip, place, scenario):
    """일정 생성 API가 시간 역전·중복 순서·음수 예산 등 현실 이슈에 대응하는지 확인한다."""

    client = APIClient()
    login = client.post(
        "/api/auth/login/",
        data={"username": manager_user.username, "password": "secure-password"},
        format="json",
    )
    assert login.status_code == 200

    if scenario.get("preexisting") == "duplicate_order":
        Schedule.objects.create(
            trip=trip,
            place=place,
            day_number=scenario["day_number"],
            start_time=datetime.strptime("08:00:00", "%H:%M:%S").time(),
            end_time=datetime.strptime("09:30:00", "%H:%M:%S").time(),
            order=scenario["order"],
            transport="버스",
            main_content="선점 일정",
            meeting_point="사전-집결지",
            budget=Decimal("20.00"),
        )

    payload = {
        "day_number": scenario["day_number"],
        "start_time": scenario["start_time"],
        "end_time": scenario["end_time"],
        "order": scenario["order"],
        "transport": scenario["transport"],
        "main_content": scenario["main_content"],
        "meeting_point": scenario["meeting_point"],
    }

    budget_value = scenario["budget"]
    if isinstance(budget_value, str):
        try:
            payload["budget"] = int(Decimal(budget_value))
        except Exception:
            payload["budget"] = budget_value
    else:
        payload["budget"] = budget_value

    if scenario["use_place"]:
        payload["place_id"] = place.id

    response = client.post(
        f"/api/trips/{trip.id}/schedules/",
        data=payload,
        format="json",
    )
    assert response.status_code == scenario["expected_status"], scenario["issue"]

    if response.status_code != 201:
        error_field = scenario["expected_error_field"]
        assert error_field in response.data
        messages = response.data[error_field]
        message_text = " ".join(messages) if isinstance(messages, list) else str(messages)
        assert scenario["expected_error_message"] in message_text
        return

    body = response.data
    expected_minutes = _calculate_duration_minutes(
        scenario["start_time"], scenario["end_time"]
    )
    assert body["duration_minutes"] == expected_minutes
    assert body["duration_display"] == _display_text(expected_minutes)
    assert body["day_number"] == scenario["day_number"]
    assert body["order"] == scenario["order"]
    place_id = body.get("place")
    place_name = body.get("place_name")
    if scenario["use_place"]:
        assert place_id == place.id
        assert place_name == place.name
    else:
        assert place_id in (None, "")
        assert place_name in (None, "")