# Generated by Django 5.0.1 on 2025-10-19 13:30

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("schedules", "0004_schedule_duration_minutes"),
    ]

    operations = [
        migrations.AddField(
            model_name="place",
            name="google_place_id",
            field=models.CharField(
                blank=True,
                help_text="Places API에서 제공하는 고유 식별자. 추후 API 재호출 시 재사용합니다.",
                max_length=255,
                null=True,
                verbose_name="Google Place ID",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="google_synced_at",
            field=models.DateTimeField(
                blank=True,
                help_text="외부 API와 마지막으로 동기화한 일시를 저장하여 재호출 주기를 관리합니다.",
                null=True,
                verbose_name="Google 데이터 동기화 시각",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="latitude",
            field=models.DecimalField(
                blank=True,
                decimal_places=6,
                help_text="Geocoding API 또는 Places API 응답에서 받아온 위도 값 (예: 37.579621)",
                max_digits=9,
                null=True,
                verbose_name="위도",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="longitude",
            field=models.DecimalField(
                blank=True,
                decimal_places=6,
                help_text="Geocoding API 또는 Places API 응답에서 받아온 경도 값 (예: 126.977041)",
                max_digits=9,
                null=True,
                verbose_name="경도",
            ),
        ),
        migrations.CreateModel(
            name="GoogleApiCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_name",
                    models.CharField(
                        help_text="예: geocoding, places_nearby, place_details, routes",
                        max_length=100,
                        verbose_name="사용 API 구분",
                    ),
                ),
                (
                    "request_hash",
                    models.CharField(
                        help_text="요청 파라미터를 직렬화한 뒤 해시한 값. 동일 요청이면 캐시를 재사용합니다.",
                        max_length=64,
                        verbose_name="요청 식별 해시",
                    ),
                ),
                (
                    "response_data",
                    models.JSONField(
                        help_text="Google API에서 받은 응답 전문(JSON)을 그대로 저장해둡니다.",
                        verbose_name="응답 원본 데이터",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="캐시가 생성된 시각",
                        verbose_name="저장 일시",
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        help_text="이 시간이 지나면 캐시를 무시하고 실제 API를 다시 호출합니다.",
                        verbose_name="만료 시각",
                    ),
                ),
            ],
            options={
                "verbose_name": "Google API 캐시",
                "verbose_name_plural": "Google API 캐시 목록",
                "indexes": [
                    models.Index(
                        fields=["service_name", "request_hash"],
                        name="schedules_g_service_1dcbb1_idx",
                    ),
                    models.Index(
                        fields=["expires_at"], name="schedules_g_expires_e6ed21_idx"
                    ),
                ],
                "unique_together": {("service_name", "request_hash")},
            },
        ),
    ]